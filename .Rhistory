## predictive market data
df_predictIt$Date <- as.Date(df_predictIt$Date,"%m/%d/%y")
df_Trump <- df_predictIt[df_predictIt$ContractName =="Trump",]
df_Biden <- df_predictIt[df_predictIt$ContractName =="Biden",]
df_price <- data.frame(Date = df_Trump$Date, priceSpread = df_Trump$OpenSharePrice - df_Biden$OpenSharePrice)
df_tradeVol <- data.frame(Date = df_Trump$Date, volume = df_Trump$TradeVolume - df_Biden$TradeVolume)
rm(df_Trump, df_Biden)
## job approval data
### format dates
df_job$index <- seq.int(nrow(df_job))
df_job$Date <- as.character(df_job$Date)
df_job$Date_Start <- sapply(strsplit(df_job$Date, " -"), "[", 1)
df_job$Date_Start <- paste0(df_job$Date_Start,"/",as.character(df_job$Year))
df_job$Date_Start <- as.Date(df_job$Date_Start,"%m/%d/%Y")
df_job$Date_Start_Wk <- paste0(as.character(df_job$Year),strftime(df_job$Date_Start, format = "%V"))
df_job$Date_End <- sapply(strsplit(df_job$Date, " - "), "[", 2)
df_job$Date_End <- paste0(df_job$Date_End,"/",as.character(df_job$Year))
df_job$Date_End <- as.Date(df_job$Date_End,"%m/%d/%Y")
df_job$Date_End_Wk <- paste0(as.character(df_job$Year),strftime(df_job$Date_End, format = "%V"))
### create daily active poll average
df_job_new <- data.frame(Date=as.Date(character())
,Approve=integer()
,Disapprove=integer()
)
for(i in 1:nrow(df_job)){
temp <- as.data.frame(seq(df_job$Date_End[i], df_job$Date_End[i] + 4, by="day"))
colnames(temp) <- "Date"
temp$index <- i
temp <- merge(temp,df_job[colnames(df_job)%in%c("index","Approve","Disapprove")],by="index")
df_job_new <- rbind(df_job_new,temp[,2:4])
}
df_job_new$jobSpread <- df_job_new$Approve - df_job_new$Disapprove
df_job <- aggregate(jobSpread ~ Date, data=df_job_new, FUN=mean)
rm(df_job_new)
### google data
colnames(df_google) <- c("Date","gTrend")
df_google$Date <- as.Date(df_google$Date,"%m/%d/%Y")
### S&P 500
df_sp$Date <- as.Date(df_sp$Date,"%m/%d/%Y")
df_sp$Month <- paste0(strftime(df_sp$Date, format = "%m"),"/1/",strftime(df_sp$Date, format = "%Y"))
df_sp$Month <- as.Date(df_sp$Month,"%m/%d/%Y")
temp <- aggregate(Close~Month,data=df_sp,FUN=mean)
colnames(temp) <- c("Month","AvgClose")
temp <- temp[order(temp$Month),]
temp$PrevMonth <- lead(temp$Month, 1, order_by=temp$Month)
df_sp <- merge(df_sp,temp,by.x="Month",by.y="PrevMonth")
df_sp$devPrevMonth <- with(df_sp, (Close-AvgClose)/AvgClose)
df_sp <- df_sp[colnames(df_sp)%in%c("Date","devPrevMonth")]
## Combine datasets
df <- merge(df_price,df_tradeVol,by="Date",all.x=TRUE)
df <- merge(df,df_google,by="Date",all.x=TRUE)
df <- merge(df,df_job,by="Date",all.x=TRUE)
df <- merge(df,df_sp,by="Date",all.x=TRUE)
## Interpolate NAs with previous values
df$devPrevMonth <- na.locf(df$devPrevMonth, fromLast = TRUE)
df$gTrend <- na.locf(df$gTrend, fromLast = TRUE)
rm(df_google,df_job,df_predictIt,df_price,df_sp,df_tradeVol,temp)
## Check for stationarity ##
plot(df$Date,df$priceSpread, type = "l",
main="Open Price Spread for Trump Victory", xlab = "Date", ylab = "Open Price Spread")
# Target series is the price spread of Trump victory shares minus Biden Victory shares
# Daily frequency from Jan 2, 2020 to May 6, 2020
# Structural break around March 3rd Super Tuesday
df_price <- df[colnames(df)%in%c("Date","priceSpread")]
# Test for structural break at Mar 3
## Define variables
tau <- as.Date("2020-03-03","%Y-%m-%d")
for(i in 1: nrow(df_price)){
if(df_price$Date[i] <= tau){
df_price$DL[i]<-0}
else{df_price$DL[i]<-1}
}
View(df_price)
lag(df_price,1)
lag(df_price,1,order_by="Date")
lag(df_price$priceSpread,1,order_by="Date")
lag(df_price$priceSpread,1,order_by="Date")
lead(df_price$priceSpread,1,order_by="Date")
df_price <- df_price[order(df_price$Date)]
df_price <- df_price[order(df_price$Date),]
df_price$priceSpread_lag <- c(NA, df_price$priceSpread[-nrow(df_price)])
View(df_price)
lm(priceSpread ~ priceSpread_lag, data=df_price[df_price$Date<=tau])
lm(priceSpread ~ priceSpread_lag, data=df_price[df_price$Date<=tau,])
lm(priceSpread ~ priceSpread_lag, data=df_price[df_price$Date<=tau,])$coefficients
lm(priceSpread ~ priceSpread_lag, data=df_price[df_price$Date<=tau,])$coefficients[1]
lm(priceSpread ~ priceSpread_lag, data=df_price[df_price$Date<=tau,])$coefficients[1][1]
lm(priceSpread ~ priceSpread_lag, data=df_price[df_price$Date<=tau,])$coeffient[1]
lm(priceSpread ~ priceSpread_lag, data=df_price[df_price$Date<=tau,])$coefficient
a0 <- lm(priceSpread ~ priceSpread_lag, data=df_price[df_price$Date<=tau,])$coefficient[1]
as.numeric(lm(priceSpread ~ priceSpread_lag, data=df_price[df_price$Date<=tau,])$coefficient[1])
a0 <- as.numeric(lm(priceSpread ~ priceSpread_lag, data=df_price[df_price$Date<=tau,])$coefficient[1])
lm(priceSpread ~ priceSpread_lag, data=df_price[df_price$Date>tau,])
summary(lm(priceSpread ~ priceSpread_lag, data=df_price[df_price$Date>tau,]))
df_price$a_hat_0 <- as.numeric(lm(priceSpread ~ priceSpread_lag, data=df_price[df_price$Date<=tau,])$coefficient[1])
df_price$a_hat_2 <- as.numeric(lm(priceSpread ~ priceSpread_lag, data=df_price[df_price$Date<=tau,])$coefficient[1])
residuals(model)
model <- lm(priceSpread ~ priceSpread_lag, data=df_price[df_price$Date<=tau,])
residuals(model)
if(!require(strucchange)){install.packages("strucchange")}; library(strucchange)
?breakpoints
breakpoints(df_price$priceSpread)
?as.ts
breakpoints(as.ts(df_price$priceSpread,start=min(df_price$Date),start=max(df_price$Date))
bp <- breakpoints(as.ts(df_price$priceSpread,start=min(df_price$Date),start=max(df_price$Date))
bp <- breakpoints(as.ts(df_price$priceSpread,start=min(df_price$Date),start=max(df_price$Date))
bp <- breakpoints(as.ts(df_price$priceSpread,start=min(df_price$Date),start=max(df_price$Date))
############################################################
##                                                        ##
##                    Create Panel Data                   ##
##                                                        ##
############################################################
####        Load Packages       ####
if(!require('devtools'))install.packages('devtools'); library(devtools)
####        Load Data       ####
df <- read.csv("https://raw.githubusercontent.com/davidrmoxley/inference/main/loanrepayment_data_analysis.csv")
####        Load Packages       ####
if(!require('lme4'))install.packages('lme4'); library(lme4) #mixed effects model
if(!require('lmtest'))install.packages('lmtest'); library(lmtest) #LR Test
if(!require('car'))install.packages('car'); library(car) #Wald Test
if(!require('lmerTest'))install.packages('lmerTest'); library(lmerTest) #formatting
if(!require('ggplot2'))install.packages('ggplot2'); library(ggplot2) #visuals
if(!require('dplyr'))install.packages('dplyr'); library(dplyr) #wrangling
if(!require('reshape'))install.packages('reshape'); library(reshape) #wrangling
####        conform names       ####
names(df)[names(df)=="Age"] <-"age"
names(df)[names(df)=="Amount"] <-"amount"
names(df)[names(df)=="Closed"] <-"closed"
names(df)[names(df)=="Customer_ID"] <-"customer_id"
names(df)[names(df)=="Default"] <-"default"
names(df)[names(df)=="FICO"] <-"fico"
names(df)[names(df)=="Gender"] <-"gender"
names(df)[names(df)=="Has_Pressure"] <-"pressure"
names(df)[names(df)=="Loan_Term"] <-"loan_term"
names(df)[names(df)=="Open"] <-"open"
names(df)[names(df)=="Paid"] <-"paid"
names(df)[names(df)=="Paid_Early"] <-"paid_early"
names(df)[names(df)=="Pressure_Intensity"] <-"pressure_intensity"
names(df)[names(df)=="Prev_Default"] <-"prev_default"
names(df)[names(df)=="Secured"] <-"secured"
names(df)[names(df)=="Tenure"] <-"tenure"
names(df)[names(df)=="Has_Other_Acct"] <-"has_other_acct"
####        Exploratory Analysis        ####
##   Set data types
df$customer_id <- as.factor(df$customer_id)
df$gender <- as.factor(df$gender)
df$secured <- as.factor(df$secured)
df$pressure <- as.factor(df$pressure)
df$prev_default <- as.integer(df$prev_default)
df$open <- as.integer(df$open)
df$closed <- as.integer(df$closed)
df$paid <- as.integer(df$paid)
#Age
table(df$default,df$age)
##Create Age Category
df$age_cat[df$age>=18 & df$age<=29] <- "18-29"
df$age_cat[df$age>=30 & df$age<45] <- "29-44"
df$age_cat[df$age>=45 & df$age<66] <- "45-65"
df$age_cat[df$age>=66] <- "66+"
df$age_cat <- factor(df$age_cat, levels = c("18-29", "29-44", "45-65", "66+"))
table(df$default,df$age_cat)
#Gender
table(df$default,df$gender)
#FICO
table(df$default, df$fico)
#Tenure
table(df$default, df$tenure)
##Create tenure categories
df$tenure_cat[df$Tenure<.5]<-"Less Than 6 Months"
df$tenure_cat[df$Tenure>=.5 & df$Tenure<=2]<-"6-24 Months"
#Gender
table(df$default,df$gender)
#FICO
table(df$default, df$fico)
#Tenure
table(df$default, df$tenure)
##Create tenure categories
df$tenure_cat[df$tenure<.5]<-"Less Than 6 Months"
df$tenure_cat[df$tenure>=.5 & df$tenure<=2]<-"6-24 Months"
df$tenure_cat[df$tenure>2 & df$tenure<=5]<-"2-5 Years"
df$tenure_cat[df$tenure>5 & df$tenure<=10]<-"5-10 Years"
df$tenure_cat[df$tenure>10 & df$tenure<=20]<-"10-20 Years"
df$tenure_cat[df$tenure>20]<-"20+ Years"
df$tenure_cat <- factor(df$tenure_cat, levels = c("Less Than 6 Months","6-24 Months","2-5 Years","5-10 Years","10-20 Years","20+ Years"))
table(df$tenure_cat)
table(df$default, df$tenure_cat)
#Has_Other_Acct
##Not enough observations, remove from model
table(df$default, df$Has_Other_Acct)
#Has_Other_Acct
##Not enough observations, remove from model
table(df$default, df$has_other_acct)
df <- subset(df,select=-has_other_acct)
table(df$default, df$has_other_acct)
#Open
table(df$Default, df$open)
#Open
table(df$default, df$open)
#Closed
table(df$default, df$closed)
#Paid
table(df$default, df$paid)
#Paid_Early
##Sequential with Paid, colinearity issues and only 1 observation; don't use
table(df$default, df$paid_early)
df <- subset(df,select=-(paid_early))
#Prev_Default
table(df$default,df$prev_default)
#Loan_Term
df$loan_term<- round(df$loan_term,2) #in years, rounding for clarity
table(df$default,df$loan_term)
##Create loan_term_cat
df$loan_term_cat[df$loan_term<=1] <- "<=1yr"
df$loan_term_cat[df$loan_term>1 & df$loan_term<=5] <- "1-5yr"
df$loan_term_cat[df$loan_term>=6 & df$loan_term<=8] <- "6-8yr"
df$loan_term_cat[df$loan_term>=9] <- "9yr+"
df$loan_term_cat <- factor(df$loan_term_cat, levels = c("<=1yr", "1-5yr", "6-8yr", "9yr+"))
table(df$Default,df$loan_term_cat)
table(df$default,df$loan_term_cat)
#Amount
table(df$default,df$amount)
df$amount_cat[df$amount<=1]<-"<=1000"
df$amount_cat[which(df$amount>1 & df$amount <=5)]<-"1k-4999"
df$amount_cat[df$amount>=5 & df$amount <10]<-"5k-9999"
df$amount_cat[df$amount>=10 & df$amount <20]<-"10k-19999"
df$amount_cat[df$amount>=20]<-"20k+"
df$amount_cat <- factor(df$amount_cat, levels = c("<=1000", "1k-4999", "5k-9999", "10k-19999","20k+"))
table(df$amount_cat)
table(df$default,df$amount_cat)
#Loan_Type
table(df$default,df$loan_type)
#Loan_Type
table(df$default,df$loan_type)
names(df)[names(df)=="Loan_Type"] <-"loan_type"
#Loan_Type
table(df$default,df$loan_type)
#Secured
table(df$default,df$secured)
##Create tenure categories
df$tenure_cat[df$tenure<.5]<-"Less Than 6 Months"
df$tenure_cat[df$tenure>=.5 & df$tenure<=2]<-"6-24 Months"
df$tenure_cat[df$tenure>2 & df$tenure<=5]<-"2-5 Years"
df$tenure_cat[df$tenure>5 & df$tenure<=10]<-"5-10 Years"
df$tenure_cat[df$tenure>10 & df$tenure<=20]<-"10-20 Years"
df$tenure_cat[df$tenure>20]<-"20+ Years"
df$tenure_cat <- factor(df$tenure_cat, levels = c("Less Than 6 Months","6-24 Months","2-5 Years","5-10 Years","10-20 Years","20+ Years"))
table(df$default, df$tenure_cat)
#Has_Other_Acct
##Not enough observations, remove from model
table(df$default, df$has_other_acct)
df <- subset(df,select=-has_other_acct)
#Open
table(df$default, df$open)
#Closed
table(df$default, df$closed)
#Paid
table(df$default, df$paid)
#Paid_Early
##Sequential with Paid, colinearity issues and only 1 observation; don't use
table(df$default, df$paid_early)
df <- subset(df,select=-(paid_early))
#Prev_Default
table(df$default,df$prev_default)
#Amount
table(df$default,df$amount)
df$amount_cat[df$amount<=1]<-"<=1000"
df$amount_cat[which(df$amount>1 & df$amount <=5)]<-"1k-4999"
df$amount_cat[df$amount>=5 & df$amount <10]<-"5k-9999"
df$amount_cat[df$amount>=10 & df$amount <20]<-"10k-19999"
df$amount_cat[df$amount>=20]<-"20k+"
df$amount_cat <- factor(df$amount_cat, levels = c("<=1000", "1k-4999", "5k-9999", "10k-19999","20k+"))
table(df$default,df$amount_cat)
#pressure
table(df$default,df$pressure)
#Pressure_Points
table(df$default,df$pressure_points)
names(df)[names(df)=="Pressure_Points"] <-"pressure_points"
#Pressure_Points
table(df$default,df$pressure_points)
#Pressure_Intensity
table(df$Default,df$pressure_intensity)
#Pressure_Intensity
table(df$default,df$pressure_intensity)
df$press_intensity_cat[df$pressure_intensity<1] <- "<=1yr" #Captures cosigners without established history
df$press_intensity_cat[df$pressure_intensity>=1 & df$pressure_intensity<=6] <- "1-6yr"
df$press_intensity_cat[df$pressure_intensity>=7 & df$pressure_intensity<=14] <- "7-14yr"
df$press_intensity_cat[df$pressure_intensity>15] <- "15yr+"
df$press_intensity_cat <- factor(df$pressure_intensity, levels = c("<=1yr", "1-6yr", "7-14yr", "15yr+"))
table(df$default,df$press_intensity_cat)
df$press_intensity_cat[df$pressure_intensity<1] <- "<=1yr" #Captures cosigners without established history
df$press_intensity_cat[df$pressure_intensity>=1 & df$pressure_intensity<=6] <- "1-6yr"
df$press_intensity_cat[df$pressure_intensity>=7 & df$pressure_intensity<=14] <- "7-14yr"
df$press_intensity_cat[df$pressure_intensity>15] <- "15yr+"
df$press_intensity_cat <- factor(df$press_intensity_cat, levels = c("<=1yr", "1-6yr", "7-14yr", "15yr+"))
table(df$default,df$press_intensity_cat)
df <- subset(df,select=-(press_intensity_cat))
t
t
t
t
t
df$press_intensity_cat[df$pressure_intensity<.1] <- "<1yr" #Captures cosigners without established history
df$press_intensity_cat[df$pressure_intensity>=.1 & df$pressure_intensity<=.6] <- "1-6yr"
df$press_intensity_cat[df$pressure_intensity>=.7 & df$pressure_intensity<=1.4] <- "7-14yr"
df$press_intensity_cat[df$pressure_intensity>15] <- "15yr+"
#df$press_intensity_cat <- factor(df$press_intensity_cat, levels = c("<=1yr", "1-6yr", "7-14yr", "15yr+"))
table(df$default,df$press_intensity_cat)
df$press_intensity_cat[df$pressure_intensity>1.5] <- "15yr+"
#df$press_intensity_cat <- factor(df$press_intensity_cat, levels = c("<=1yr", "1-6yr", "7-14yr", "15yr+"))
table(df$default,df$press_intensity_cat)
df$press_intensity_cat[df$pressure_intensity>0 & df$pressure_intensity<.1] <- "<1yr" #Captures cosigners without established history
df$press_intensity_cat[df$pressure_intensity>=.1 & df$pressure_intensity<=.6] <- "1-6yr"
df$press_intensity_cat[df$pressure_intensity>=.7 & df$pressure_intensity<=1.4] <- "7-14yr"
df$press_intensity_cat[df$pressure_intensity>1.5] <- "15yr+"
#df$press_intensity_cat <- factor(df$press_intensity_cat, levels = c("<=1yr", "1-6yr", "7-14yr", "15yr+"))
table(df$default,df$press_intensity_cat)
df$press_intensity_cat[df$pressure_intensity>0 & df$pressure_intensity<.1] <- "<1yr" #Captures cosigners without established history
df$press_intensity_cat[df$pressure_intensity>0 & df$pressure_intensity<.1] <- "<1yr" #Captures cosigners without established history
df$press_intensity_cat[df$pressure_intensity>=.1 & df$pressure_intensity<=.6] <- "1-6yr"
df$press_intensity_cat[df$pressure_intensity>=.7 & df$pressure_intensity<=1.4] <- "7-14yr"
df$press_intensity_cat[df$pressure_intensity>1.5] <- "15yr+"
#df$press_intensity_cat <- factor(df$press_intensity_cat, levels = c("<=1yr", "1-6yr", "7-14yr", "15yr+"))
table(df$default,df$press_intensity_cat)
df$press_intensity_cat[df$pressure_intensity>.001 & df$pressure_intensity<.1] <- "<1yr" #Captures cosigners without established history
df$press_intensity_cat[df$pressure_intensity>=.1 & df$pressure_intensity<=.6] <- "1-6yr"
df$press_intensity_cat[df$pressure_intensity>=.7 & df$pressure_intensity<=1.4] <- "7-14yr"
df$press_intensity_cat[df$pressure_intensity>1.5] <- "15yr+"
#df$press_intensity_cat <- factor(df$press_intensity_cat, levels = c("<=1yr", "1-6yr", "7-14yr", "15yr+"))
table(df$default,df$press_intensity_cat)
table(df$default,df$year)
#Year
df$year <- as.factor(substr(df$As_Of_Dt,1,4))
table(df$default,df$year)
#Recession
df$recession <-0
df$recession[df$year%in%c("2001,2002,2008,2009,2010,2020")]<-1
table(df$default,df$recession)
df$year
df$recession[df$year%in%c("2001,2002,2008,2009,2010,2020")]<-1
table(df$default,df$recession)
df$recession[df$year%in%c("2001,2002,2008,2009,2010,2020")]
df$recession[df$year%in%c(2001,2002,2008,2009,2010,2020)]<-1
table(df$default,df$recession)
####        Look at correlations      ####
cor(df[,c("default","age","tenure","open","closed","paid","prev_default"
,"loan_term","amount","secured","pressure","pressure_points","pressure_intensity")])
df$pressure <- as.integer(df$pressure )
df$secured <- as.integer(df$secured)
####        Look at correlations      ####
cor(df[,c("default","age","tenure","open","closed","paid","prev_default"
,"loan_term","amount","secured","pressure","pressure_points","pressure_intensity")])
####        Look at correlations      ####
corrplot.mixed(df[,c("default","age","tenure","open","closed","paid","prev_default"
,"loan_term","amount","secured","pressure","pressure_points","pressure_intensity")])
if(!require('corrplot'))install.packages('corrplot'); library(corrplot) #plots
if(!require('corrplot'))install.packages('corrplot'); library(corrplot) #plots
corrplot.mixed(M)
####        Look at correlations      ####
corrplot.mixed(df[,c("default","age","tenure","open","closed","paid","prev_default"
,"loan_term","amount","secured","pressure","pressure_points","pressure_intensity")])
?corrplot
####        Look at correlations      ####
corrplot.mixed(df[,c("default","age","tenure","open","closed","paid","prev_default"
,"loan_term","amount","secured","pressure","pressure_points","pressure_intensity")],na.trim=TRUE)
####        Look at correlations      ####
plot <- df[,c("default","age","tenure","open","closed","paid","prev_default","loan_term","amount","secured","pressure","pressure_points","pressure_intensity")]
plot <- na.omit(plot)
View(plot)
corrplot.mixed(plot)
#Amount
df$amount <- round(df$amount,3)
table(df$default,df$amount)
####        Look at correlations      ####
plot <- df[,c("default","age","tenure","open","closed","paid","prev_default","loan_term","amount","secured","pressure","pressure_points","pressure_intensity")]
corrplot.mixed(plot)
cor(plot)
ggplot(data = plot, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()
plot_normalized <- melt(plot)
ggplot(data = plot_normalized, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()
ggplot(data = plot_normalized, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()
plot_normalized
melt(plot)
na.omit(plot)
####        Look at correlations      ####
plot <- df[,c("default","age","tenure","open","closed","paid","prev_default","loan_term","amount","secured","pressure","pressure_points","pressure_intensity")]
plot_normalized <- melt(plot)
plot_normalized
plot
ggplot(data = plot_normalized, aes(x=variable, y=value, fill=value)) +
geom_tile()
####        Look at correlations      ####
cor_plot <- round(cor(df[,c("default","age","tenure","open","closed","paid","prev_default","loan_term","amount","secured","pressure","pressure_points","pressure_intensity")],3)
cor_plot_normalized <- melt(cor_plot)
melt(cor_plot)
cor_plot <- round(cor(df[,c("default","age","tenure","open","closed","paid","prev_default","loan_term","amount","secured","pressure","pressure_points","pressure_intensity")],3)
####        Look at correlations      ####
cor_plot <- round(cor(df[,c("default","age","tenure","open","closed","paid","prev_default","loan_term","amount","secured","pressure","pressure_points","pressure_intensity")]),3)
cor_plot_normalized <- melt(cor_plot)
cor_plot
cor(df[,c("default","age","tenure","open","closed","paid","prev_default","loan_term","amount","secured","pressure","pressure_points","pressure_intensity")])
round(cor(df[,c("default","age","tenure","open","closed","paid","prev_default","loan_term","amount","secured","pressure","pressure_points","pressure_intensity")]),3)
cor_plot <- round(cor(df[,c("default","age","tenure","open","closed","paid","prev_default","loan_term","amount","secured","pressure","pressure_points","pressure_intensity")]),3)
melt(cor_plot)
cor_plot_normalized <- melt(cor_plot)
cor_plot_normalized
ggplot(data = cor_plot_normalized, aes(x=X1, y=X2, fill=value)) +
geom_tile()
ggplot(data = cor_plot_normalized, aes(x=X1, y=X2, fill=value))
+  geom_raster()
ggplot(data = cor_plot_normalized, aes(x=X1, y=X2, fill=value)) +
geom_raster()
upper.tri(cor_plot)
cor_plot[upper.tri(cor_plot)]
melt(cor_plot[lower.tri(cor_plot)], na.rm = TRUE)
cor_plot_normalized <- melt(cor_plot[lower.tri(cor_plot)], na.rm = TRUE)
names(cor_plot_normalized)
names(cor_plot_normalized)
# Melt the correlation matrix
cor_plot_upr <- cor_plot
cor_plot_upr[lower.tri(cor_plot)] <- NA
melt(cor_plot_upr, na.rm = TRUE)
cor_plot_normalized <- melt(cor_plot_upr, na.rm = TRUE)
names(cor_plot_normalized)
ggplot(data = cor_plot_normalized, aes(X1, X2, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
####        Look at correlations      ####
plot <- df[,c("default","age","tenure","open","closed","paid","prev_default","loan_term","amount","secured","pressure","pressure_points","pressure_intensity")]
corrplot(plot, method="number")
####        Look at correlations      ####
plot <- df[,c("default","age")]#,"tenure","open","closed","paid","prev_default","loan_term","amount","secured","pressure","pressure_points","pressure_intensity")]
corrplot(plot, method="number")
corrplot(cor(test), method="number")
corrplot(plot, method="number")
####        Look at correlations      ####
plot <- df[,c("default","age","tenure","open","closed","paid","prev_default","loan_term","amount","secured","pressure","pressure_points","pressure_intensity")]
?corrplot
setwd("C:/Users/dmoxley/Documents/GitHub/inference")
# generate data
N <- 100 # 100 individuals
Y <- rnorm(N, 66, 6) # heights  in inches
hist(Y)
m_stan <- 'data{
int N;
real Y[N]; // continuous variable Y for N individuals, ie array of heights
}
// parameters block of our distribution
parameters{
real mu; // continous unconstrained variable
real<lower=0> sigma; // nonegative value
}
// model block
model{
// likelihood
for(i in 1:N)
Y[i] ~ normal(mu,sigma); // individual i height, Yi is distributed normal with mean mu and sd sigma
// priors
mu ~ normal(68, 8);
sigma ~ cauchy(0, 1); // location parameter 0, scale parameter 1; effectively half cauchy bc sigma is nonegative
}'
# fit model using qualifier (::) rather than loading rstan
m_fit <- rstan::stan(model_code = m_stan, data = list(Y))
install.packages('Rtools')
getRversion()
install.packages("installr")
library(installr)
updateR()
library(Rtools)
install.packages('Rtools')
library(Rtools)
library(Rtools)
install.packages('Rtools')
library(Rtools)
install.packages('pkgbuild')
install.packages("pkgbuild")
install.packages("rtools")
v_i = devtools:::version_info
install.packages('devtools')
install.packages("devtools")
v_i = devtools:::version_info
# now find_rtools should work properly
devtools::find_rtools()
library(Rtools)
library(rtools)
# fit model using qualifier (::) rather than loading rstan
m_fit <- rstan::stan(model_code = m_stan, data = list(Y))
# compile model
m_stan <- stan_model('bayesian_inference_ex_model.stan')
m_stan <- stan_model('bayesian_inference_ex_model.stan')
#
library(rstan)
# compile model
m_stan <- stan_model('bayesian_inference_ex_model.stan')
#
library(rstan)
# generate data
N <- 100 # 100 individuals
Y <- rnorm(N, 66, 6) # heights  in inches
hist(Y)
# compile model
m_stan <- stan_model('bayesian_inference_ex_model.stan')
# generate data
N <- 100 # 100 individuals
